{"ast":null,"code":"var _jsxFileName = \"/Users/isabellaschwarz/Downloads/DHBW/Web Engineering/Web Engineering 2/Web2/frontend/src/components/pages/Readlist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Heading } from \"../common/Heading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Readlist = () => {\n  _s();\n  const [readlist, setReadlist] = useState([]);\n  const username = \"isabella\"; // replace with dynamic value later if needed\n\n  // Load the shelf from backend on mount\n  useEffect(() => {\n    fetch(`http://localhost:8080/shelves/${username}`).then(res => res.json()).then(data => setReadlist(data)).catch(err => console.error(\"Failed to load shelf:\", err));\n  }, []);\n\n  // Example book object to test with\n  const sampleBook = {\n    title: \"Project Hail Mary\"\n  };\n\n  // Add a book to shelf\n  const addToReadlist = () => {\n    fetch(`http://localhost:8080/shelves?username=${username}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        bookTitle: sampleBook.title,\n        shelfType: \"read\"\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"Book added:\", data);\n      setReadlist([...readlist, data]); // update UI\n    }).catch(err => console.error(\"Failed to add:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"about\",\n    style: {\n      backgroundColor: \"black\",\n      height: \"100vh\",\n      color: \"white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Meine Readlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToReadlist,\n        children: \"Add Sample Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), readlist.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keine B\\xFCcher hinzugef\\xFCgt...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: readlist.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [book.bookTitle, \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: book.shelfType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 36\n          }, this)]\n        }, book.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Readlist, \"g2++ip87fUnBWhpIQvkrYyT1cHo=\");\n_c = Readlist;\nexport default Readlist;\nvar _c;\n$RefreshReg$(_c, \"Readlist\");","map":{"version":3,"names":["React","useState","useEffect","Heading","jsxDEV","_jsxDEV","Readlist","_s","readlist","setReadlist","username","fetch","then","res","json","data","catch","err","console","error","sampleBook","title","addToReadlist","method","headers","body","JSON","stringify","bookTitle","shelfType","log","className","style","backgroundColor","height","color","children","flex","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","book","id","_c","$RefreshReg$"],"sources":["/Users/isabellaschwarz/Downloads/DHBW/Web Engineering/Web Engineering 2/Web2/frontend/src/components/pages/Readlist.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Heading } from \"../common/Heading\";\n\nexport const Readlist = () => {\n  const [readlist, setReadlist] = useState([]);\n  const username = \"isabella\"; // replace with dynamic value later if needed\n\n  // Load the shelf from backend on mount\n  useEffect(() => {\n    fetch(`http://localhost:8080/shelves/${username}`)\n      .then(res => res.json())\n      .then(data => setReadlist(data))\n      .catch(err => console.error(\"Failed to load shelf:\", err));\n  }, []);\n\n  // Example book object to test with\n  const sampleBook = {\n    title: \"Project Hail Mary\",\n  };\n\n  // Add a book to shelf\n  const addToReadlist = () => {\n    fetch(`http://localhost:8080/shelves?username=${username}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        bookTitle: sampleBook.title,\n        shelfType: \"read\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Book added:\", data);\n        setReadlist([...readlist, data]); // update UI\n      })\n      .catch((err) => console.error(\"Failed to add:\", err));\n  };\n\n  return (\n    <section className=\"about\" style={{ backgroundColor: \"black\", height: \"100vh\", color: \"white\" }}>\n      <div style={{ flex: 1 }}>\n        <Heading title=\"Meine Readlist\" />\n        <button onClick={addToReadlist}>Add Sample Book</button>\n        {readlist.length === 0 ? (\n          <p>Keine Bücher hinzugefügt...</p>\n        ) : (\n          <ul>\n            {readlist.map((book) => (\n              <li key={book.id}>\n                {book.bookTitle} — <i>{book.shelfType}</i>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Readlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}