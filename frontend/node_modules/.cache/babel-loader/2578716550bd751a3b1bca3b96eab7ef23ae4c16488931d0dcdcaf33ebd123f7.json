{"ast":null,"code":"const API_BASE = '';\nexport async function fetchBooks() {\n  const response = await fetch(`${API_BASE}/books`);\n  return await response.json();\n}\nexport async function addUser(user) {\n  const response = await fetch(`${API_BASE}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  return await response.json();\n}\nexport async function saveToShelf(entry) {\n  const response = await fetch(`${API_BASE}/shelf`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(entry)\n  });\n  return await response.json();\n}\nexport async function addToShelf(username, bookTitle, shelfType = \"read\") {\n  const response = await fetch(`http://localhost:8080/shelves?username=${username}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      bookTitle,\n      shelfType\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to add book to shelf\");\n  }\n  return await response.json();\n}\nexport function getCurrentUsername() {\n  const username = localStorage.getItem(\"username\");\n  if (!username) {\n    console.warn(\"No user is currently logged in\");\n  }\n  return username;\n}\nexport async function fetchShelf(username) {\n  const response = await fetch(`http://localhost:8080/shelves/${username}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch shelf\");\n  }\n  return await response.json();\n}","map":{"version":3,"names":["API_BASE","fetchBooks","response","fetch","json","addUser","user","method","headers","body","JSON","stringify","saveToShelf","entry","addToShelf","username","bookTitle","shelfType","ok","Error","getCurrentUsername","localStorage","getItem","console","warn","fetchShelf"],"sources":["/Users/isabellaschwarz/Downloads/DHBW/Web Engineering/Web Engineering 2/Web2/frontend/src/services/api.js"],"sourcesContent":["const API_BASE = '';\n\nexport async function fetchBooks() {\n  const response = await fetch(`${API_BASE}/books`);\n  return await response.json();\n}\n\n\n\n\nexport async function addUser(user) {\n  const response = await fetch(`${API_BASE}/users`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user),\n  });\n  return await response.json();\n}\n\nexport async function saveToShelf(entry) {\n  const response = await fetch(`${API_BASE}/shelf`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(entry),\n  });\n  return await response.json();\n}\nexport async function addToShelf(username, bookTitle, shelfType = \"read\") {\n  const response = await fetch(`http://localhost:8080/shelves?username=${username}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ bookTitle, shelfType }),\n  });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to add book to shelf\");\n    }\n  \n    return await response.json();\n  }\n  export function getCurrentUsername() {\n    const username = localStorage.getItem(\"username\");\n    if (!username) {\n      console.warn(\"No user is currently logged in\");\n    }\n    return username;\n  }\n\n  export async function fetchShelf(username) {\n    const response = await fetch(`http://localhost:8080/shelves/${username}`);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch shelf\");\n    }\n    return await response.json();\n  }"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,EAAE;AAEnB,OAAO,eAAeC,UAAUA,CAAA,EAAG;EACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,QAAQ,CAAC;EACjD,OAAO,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAKA,OAAO,eAAeC,OAAOA,CAACC,IAAI,EAAE;EAClC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,QAAQ,EAAE;IAChDO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC3B,CAAC,CAAC;EACF,OAAO,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeQ,WAAWA,CAACC,KAAK,EAAE;EACvC,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,QAAQ,EAAE;IAChDO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,KAAK;EAC5B,CAAC,CAAC;EACF,OAAO,MAAMX,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AACA,OAAO,eAAeU,UAAUA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,GAAG,MAAM,EAAE;EACxE,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0CY,QAAQ,EAAE,EAAE;IACjFR,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEK,SAAS;MAAEC;IAAU,CAAC;EAC/C,CAAC,CAAC;EAEA,IAAI,CAACf,QAAQ,CAACgB,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAO,MAAMjB,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AACA,OAAO,SAASgB,kBAAkBA,CAAA,EAAG;EACnC,MAAML,QAAQ,GAAGM,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,IAAI,CAACP,QAAQ,EAAE;IACbQ,OAAO,CAACC,IAAI,CAAC,gCAAgC,CAAC;EAChD;EACA,OAAOT,QAAQ;AACjB;AAEA,OAAO,eAAeU,UAAUA,CAACV,QAAQ,EAAE;EACzC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCY,QAAQ,EAAE,CAAC;EACzE,IAAI,CAACb,QAAQ,CAACgB,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAO,MAAMjB,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}