{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Desktop\\\\Git\\\\Web2\\\\frontend\\\\src\\\\components\\\\pages\\\\Books.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { fetchBooksByGenre, fetchBooks } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Books = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [books, setBooks] = useState([]);\n\n  // Initial: Alle Genres ermitteln (aus allen Büchern oder eigener API)\n  useEffect(() => {\n    fetchBooks().then(data => {\n      const uniqueGenres = Array.from(new Set(data.map(book => book.genre)));\n      setGenres(uniqueGenres);\n    });\n  }, []);\n\n  // Bücher neu laden, wenn Genre gewählt wurde\n  useEffect(() => {\n    if (selectedGenre) {\n      fetchBooksByGenre(selectedGenre).then(setBooks).catch(err => console.error(\"Fehler beim Laden der Bücher:\", err));\n    }\n  }, [selectedGenre]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"B\\xFCcher nach Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedGenre,\n      onChange: e => setSelectedGenre(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Genre ausw\\xE4hlen...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), genres.map((genre, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: genre,\n        children: genre\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"1rem\"\n      },\n      children: [books.length === 0 && selectedGenre && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keine B\\xFCcher gefunden.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 49\n      }, this), books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\",\n          border: \"1px solid #ccc\",\n          padding: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.coverUrl,\n          alt: book.title,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: book.genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Books, \"I1hFNKaZ4mbzNhYZA4gMR3jmdWs=\");\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["useEffect","useState","fetchBooksByGenre","fetchBooks","jsxDEV","_jsxDEV","Books","_s","genres","setGenres","selectedGenre","setSelectedGenre","books","setBooks","then","data","uniqueGenres","Array","from","Set","map","book","genre","catch","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","idx","marginTop","display","flexWrap","gap","length","width","border","src","coverUrl","alt","title","author","id","_c","$RefreshReg$"],"sources":["C:/Users/a/Desktop/Git/Web2/frontend/src/components/pages/Books.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { fetchBooksByGenre, fetchBooks } from \"../../services/api\";\r\n\r\nexport const Books = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [books, setBooks] = useState([]);\r\n\r\n  // Initial: Alle Genres ermitteln (aus allen Büchern oder eigener API)\r\n  useEffect(() => {\r\n    fetchBooks().then((data) => {\r\n      const uniqueGenres = Array.from(new Set(data.map(book => book.genre)));\r\n      setGenres(uniqueGenres);\r\n    });\r\n  }, []);\r\n\r\n  // Bücher neu laden, wenn Genre gewählt wurde\r\n  useEffect(() => {\r\n    if (selectedGenre) {\r\n      fetchBooksByGenre(selectedGenre)\r\n        .then(setBooks)\r\n        .catch((err) => console.error(\"Fehler beim Laden der Bücher:\", err));\r\n    }\r\n  }, [selectedGenre]);\r\n\r\n  return (\r\n    <section style={{ padding: \"2rem\" }}>\r\n      <h2>Bücher nach Genre</h2>\r\n\r\n      <select\r\n        value={selectedGenre}\r\n        onChange={(e) => setSelectedGenre(e.target.value)}\r\n      >\r\n        <option value=\"\">Genre auswählen...</option>\r\n        {genres.map((genre, idx) => (\r\n          <option key={idx} value={genre}>\r\n            {genre}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <div style={{ marginTop: \"2rem\", display: \"flex\", flexWrap: \"wrap\", gap: \"1rem\" }}>\r\n        {books.length === 0 && selectedGenre && <p>Keine Bücher gefunden.</p>}\r\n        {books.map((book) => (\r\n          <div key={book.id} style={{ width: \"200px\", border: \"1px solid #ccc\", padding: \"1rem\" }}>\r\n            <img src={book.coverUrl} alt={book.title} style={{ width: \"100%\" }} />\r\n            <h3>{book.title}</h3>\r\n            <p>{book.author}</p>\r\n            <small><i>{book.genre}</i></small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}